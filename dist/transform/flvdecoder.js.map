{"version":3,"file":"flvdecoder.js","sourceRoot":"","sources":["../../src/server/transform/flvdecoder.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport { SmartBuffer } from '../utils/smartbuffer';\nimport { VideoTag } from '../interfaces/videotag';\n\nexport const FLV = {\n  SCRIPT: 18,\n  VIDEO: 9,\n  VIDEO_AVC: 7,\n  VIDEO_AVC_KEYFRAME: 1,\n  VIDEO_AVC_INTERFRAME: 2,\n  AUDIO: 8,\n  AUDIO_AAC: 10,\n  AUDIO_AAC_HEADER: 0,\n  AUDIO_AAC_RAW: 1,\n  AUDIO_MP3: 2,\n  AVC_DECODER_CONFIG: 0,\n  AVC_VIDEO_DATA: 1\n};\n\nconst FLVHeaderSize = 9;\nconst FLVTagHeaderSize = 17;\n\nexport class FLVDecoder extends EventEmitter {\n  private streamReadyCallback: () => void;\n  private streamReady: boolean = false;\n  private firstChunk: boolean = true;\n  private firstPacket: Buffer;\n  private AACHeader: VideoTag;\n  private AVCDecoderConfig: VideoTag;\n  private FLVScriptHeader: VideoTag;\n  private FLVHeader: Buffer;\n\n  constructor(streamReadyCallback: () => void) {\n    super();\n    this.streamReadyCallback = streamReadyCallback; //TODO: move out to separate class\n  }\n\n  // save important tags to reconstruct the stream\n  saveTag(tag: VideoTag) {\n    if (tag.type === FLV.SCRIPT) {\n      this.FLVScriptHeader = tag;\n    } else if (tag.type === FLV.VIDEO && tag.avcPayloadType === FLV.AVC_DECODER_CONFIG) {\n      this.AVCDecoderConfig = tag;\n    } else if (tag.type === FLV.AUDIO && tag.aacFrameType === FLV.AUDIO_AAC_HEADER) {\n      this.AACHeader = tag;\n    }\n\n    if (\n      this.FLVHeader &&\n      this.AVCDecoderConfig &&\n      this.AACHeader &&\n      this.FLVScriptHeader &&\n      !this.streamReady\n    ) {\n      this.streamReadyCallback();\n      this.streamReady = true;\n\n      this.FLVScriptHeader.data.writeUInt32BE(0, 0);\n      this.AVCDecoderConfig.data.writeUInt32BE(this.FLVScriptHeader.data.length, 0);\n      this.AACHeader.data.writeUInt32BE(this.AVCDecoderConfig.data.length, 0);\n      this.firstPacket = Buffer.concat([\n        this.FLVHeader,\n        this.FLVScriptHeader.data,\n        this.AVCDecoderConfig.data,\n        this.AACHeader.data\n      ]);\n    }\n\n    if (this.streamReady) {\n      this.emit('frame', tag);\n    }\n  }\n\n  logTag(tag: VideoTag) {\n    let audioFormatName =\n      tag.info.audioFormat == 2 ? 'MP3' : tag.info.audioFormat == 10 ? 'AAC' : 'Other';\n    audioFormatName += ' ' + ['5.5Khz', '11Khz', '22Khz', '44Khz'][tag.info.audioBitRate];\n    audioFormatName += ' ' + ['8bit', '16bit'][tag.info.audioSampleSize];\n    audioFormatName += ' ' + ['Mono', 'Stereo'][tag.info.audioType];\n\n    const types = ['', 'key', 'inter', 'disposable', 'generated', 'command'];\n    const codecs = ['', '', 'H.263', 'Screen', 'VP6', 'VP6+alpha', 'Screen v2', 'AVC'];\n    let avcOpts = '';\n    avcOpts += tag.avcPayloadType === FLV.AVC_DECODER_CONFIG ? ' AVCDecoderConfig' : '';\n    avcOpts += tag.avcPayloadType === FLV.AVC_VIDEO_DATA ? ' AVCVideoData' : '';\n    audioFormatName += tag.aacFrameType === FLV.AUDIO_AAC_HEADER ? ' (aac header)' : ' (raw)';\n\n    if (tag.type === FLV.SCRIPT) {\n      //script\n      console.log(`[${tag.timestamp.toFixed(3)}] script frame`);\n    } else if (tag.type === FLV.AUDIO) {\n      //audio\n      console.log(`[${tag.timestamp}] audio frame ${audioFormatName}`);\n    } else if (tag.type === FLV.VIDEO) {\n      //video\n      console.log(\n        `[${tag.timestamp}] video frame ${codecs[FLV.VIDEO_AVC]} ${types[\n          tag.avcFrameType\n        ]} ${avcOpts}`\n      );\n    }\n  }\n\n  readTag(data: SmartBuffer) {\n    const storedOffset = data.readOffset;\n    if (data.length < data.readOffset + FLVTagHeaderSize) {\n      console.log('cant read tag');\n      return null;\n    }\n\n    const tagHeaderStart = data.readOffset;\n    data.readOffset += 4; // PreviousTagSize0\n    const flags = data.readUInt8();\n    const tagSize = data.readUInt24BE(); // Equal to length of the tag – 11\n    const tsLo = data.readUInt24BE();\n    const tsHi = data.readUInt8();\n    // clear erroneus streamid\n    data.writeOffset = data.readOffset;\n    data.writeUInt8(0);\n    data.writeUInt16BE(0);\n    data.readOffset += 3; // StreamID (always zero)\n    const tagStart = data.readOffset;\n\n    if (data.length < tagStart + tagSize) {\n      data.readOffset = storedOffset; // rewind\n      // console.log('cant read whole tag: size ' + (tagSize + FLVTagHeaderSize));\n      return null;\n    }\n\n    const tagData = data.internalBuffer.slice(tagHeaderStart, tagStart + tagSize);\n    const tag: VideoTag = {\n      type: 0,\n      aacFrameType: 0,\n      avcFrameType: 0,\n      avcPayloadType: 0,\n      size: 0,\n      timestamp: 0.0,\n      info: {\n        audioFormat: 0,\n        audioBitRate: 0,\n        audioSampleSize: 0,\n        audioCodecID: 0,\n        audioType: 0\n      },\n      data: tagData\n    }; // seconds\n\n    tag.type = flags & 0x1f;\n    tag.timestamp = (tsLo + (tsHi << 24)) / 1000;\n    if (tag.type === FLV.SCRIPT) {\n      //script\n      // do not parse\n      console.log('scr');\n    } else if (tag.type === FLV.AUDIO) {\n      //audio\n      const frameFlags = data.readUInt8();\n      tag.info.audioFormat = frameFlags >> 4;\n      tag.info.audioBitRate = (frameFlags & 0xc) >> 2;\n      tag.info.audioSampleSize = (frameFlags & 0x2) >> 1;\n      tag.info.audioType = frameFlags & 0x1;\n      if (tag.info.audioFormat == FLV.AUDIO_AAC) {\n        // aac\n        tag.aacFrameType = data.readUInt8();\n      }\n    } else if (tag.type === FLV.VIDEO) {\n      //video\n      const frameFlags = data.readUInt8();\n      tag.avcFrameType = frameFlags >> 4;\n      const codecID = frameFlags & 0xf;\n\n      if (codecID == FLV.VIDEO_AVC) {\n        // avc\n        tag.avcPayloadType = data.readUInt8();\n      } else {\n        throw new Error(`Unsupported video codec: ${codecID}`);\n      }\n    } else {\n      console.log('Unknown FLV tag');\n    }\n\n    // this.logTag(tag);\n    this.saveTag(tag);\n    data.readOffset = tagStart + tagSize;\n    // console.log(`Tag T:${tag.type} start:${tagStart} size:${tagSize} end:${data.readOffset} dlen:${data.length}`)\n\n    return tag;\n  }\n\n  parseChunks(chunk: Buffer): number {\n    const data = new SmartBuffer(chunk);\n    // console.log(`Got chunk ${chunkCounter}, ${data.length} bytes`);\n    if (this.firstChunk) {\n      this.firstChunk = false;\n      if (data.length < FLVHeaderSize) {\n        console.log('No FLV header found, stopping');\n        return 0;\n      }\n      const magic = data.readUInt32BE();\n      if (magic !== 0x464c5601) {\n        console.log('No FLV magic found, stopping');\n        return 0;\n      } else {\n        console.log('FLV magic');\n      }\n      data.readOffset += 5; // uint8 flags == 5; uint32 headerSize == 9\n      this.FLVHeader = chunk.slice(0, FLVHeaderSize);\n    }\n\n    while (true) {\n      let tag = this.readTag(data);\n      if (!tag) {\n        // console.log('end of chunk');\n        break;\n      }\n    }\n\n    return data.length - data.readOffset; // unprocessed\n  }\n}\n\nmodule.exports = {\n  FLV,\n  FLVDecoder\n};\n"]}