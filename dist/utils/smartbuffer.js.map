{"version":3,"file":"smartbuffer.js","sourceRoot":"","sources":["../../src/server/utils/smartbuffer.ts"],"names":[],"mappings":";;AAMA;IAKE,YAAY,MAAc;QAHnB,eAAU,GAAW,CAAC,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QAG7B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC/B,CAAC;IAEM,SAAS,CAAC,MAAe;QAC9B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACrE,CAAC;IAEM,YAAY;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QACrB,MAAM,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,YAAY,CAAC,MAAe;QACjC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC;IAEM,UAAU,CAAC,KAAa,EAAE,MAAe;QAC9C,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9E,CAAC;IAEM,aAAa,CAAC,KAAa,EAAE,MAAe;QACjD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;IAEM,aAAa,CAAC,KAAa,EAAE,MAAe;QACjD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;IAED,IAAW,MAAM;QACf,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IACpC,CAAC;IAEO,eAAe,CAAC,IAAwB,EAAE,QAAgB,EAAE,MAAe;QACjF,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QACxE,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,QAAQ,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEO,gBAAgB,CACtB,IAAyB,EACzB,QAAgB,EAChB,KAAa,EACb,MAAe;QAEf,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QACzE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,SAAS,GAAG,QAAQ,CAAC;IAC1C,CAAC;CACF;AAxDD,kCAwDC","sourcesContent":["// derived from https://github.com/JoshGlazebrook/smart-buffer\n// range checks excluded\n\ntype BufferReadFunction = (offset: number, noAssert?: boolean) => number;\ntype BufferWriteFunction = (value: number, offset: number, noAssert?: boolean) => number;\n\nexport class SmartBuffer {\n  public internalBuffer: Buffer;\n  public readOffset: number = 0;\n  public writeOffset: number = 0;\n\n  constructor(buffer: Buffer) {\n    this.internalBuffer = buffer;\n  }\n\n  public readUInt8(offset?: number) {\n    return this.readNumberValue(Buffer.prototype.readUInt8, 1, offset);\n  }\n\n  public readUInt24BE() {\n    let value = this.readUInt32BE();\n    this.readOffset -= 1;\n    return (value & 0xffffff00) >> 8;\n  }\n\n  public readUInt32BE(offset?: number) {\n    return this.readNumberValue(Buffer.prototype.readUInt32BE, 4, offset);\n  }\n\n  public writeUInt8(value: number, offset?: number) {\n    return this.writeNumberValue(Buffer.prototype.writeUInt8, 1, value, offset);\n  }\n\n  public writeUInt16BE(value: number, offset?: number) {\n    return this.writeNumberValue(Buffer.prototype.writeUInt16BE, 2, value, offset);\n  }\n\n  public writeUInt32BE(value: number, offset?: number) {\n    return this.writeNumberValue(Buffer.prototype.writeUInt32BE, 4, value, offset);\n  }\n\n  public get length() {\n    return this.internalBuffer.length;\n  }\n\n  private readNumberValue(func: BufferReadFunction, byteSize: number, offset?: number) {\n    const offsetVal = typeof offset === 'number' ? offset : this.readOffset;\n    const value = func.call(this.internalBuffer, offsetVal);\n    this.readOffset = offsetVal + byteSize;\n    return value;\n  }\n\n  private writeNumberValue(\n    func: BufferWriteFunction,\n    byteSize: number,\n    value: number,\n    offset?: number\n  ) {\n    const offsetVal = typeof offset === 'number' ? offset : this.writeOffset;\n    func.call(this.internalBuffer, value, offsetVal);\n    this.writeOffset = offsetVal + byteSize;\n  }\n}\n"]}